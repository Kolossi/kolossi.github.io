define(["../util","./item","exports"],function(t,e,n){return n=function(t){this.entry=[],this.types={},this.length=0,this.max=void 0,t&&this.addAll(t,!0,!0)},n.prototype={add:function(t,i){var r=this.find(t);if(r)return i!==!1&&t.postedTime>r.postedTime?this.replace(r,t):!1;if(!this.canAdd(t))throw new n.LimitReachedError(this);return t instanceof e||(t=new e(t)),this._insertEntry(t)},addAll:function(e,n,r){if("string"==typeof e&&(e=t.json.parse(e)),e instanceof Array){var s,h=[];for(i=0;s=e[i];i++)if(r)try{s=this.add(s,n),s&&h.push(s)}catch(o){var u=window.console;u&&"function"==typeof u.warn&&u.warn("Personalisation error: "+o)}else s=this.add(s,n),s&&h.push(s);return h}return"object"==typeof e?e.entry?this.addAll(e.entry,n,r):this.add(e,n):!1},canAdd:function(){return!this.isFull()},contains:function(){return!!this.find.apply(this,arguments)},each:function(t,e,i){if("function"==typeof t){var n,r,s=i?this.length-1:0,h=i?-1:1;for(e=e||this;r=this.entry[s];s+=h)if(n=t.call(e,r,s,this.entry),void 0!==n)return n}},eachInReverse:function(t,e){return this.each(t,e,!0)},equals:function(e){if(e===this)return!0;if("string"==typeof e)return this.equals(t.json.parse(e));var i=e.length||e.totalResults;return e.entry instanceof Array&&(void 0===i||i==this.length)?void 0===this.each(function(t,i){return t.equals(e.entry[i])?void 0:!1}):!1},find:function(t,e){return"object"==typeof t&&t.id&&t.type&&(e=t.type,t=t.id),e=this.types[e],e&&e[t]},filter:function(t,e){var i=this.entry,n=i.slice(0);e=e||this;for(var r=i.length-1;r>=0;r--)t.call(e,i[r],r,i)||n.splice(r,1);return n},getIndex:function(t){return this.entry[t]},getItemsWithType:function(t){var e=this.types[t];return e||(e=this.types[t]={}),e},isEmpty:function(){return!this.length},isFull:function(){return!isNaN(this.max)&&this.length>=this.max},remove:function(t){if(!(t instanceof e||(t=this.find(t))))return!1;var i=this._indexOf(t);return-1===i?!1:this._removeIndex(i,t)},replace:function(t,e){return this.remove(t)&&this.add(e)},toJSON:function(){return{entry:this.entry}},toJSONString:function(){return t.json.stringify(this)},toString:function(){return"Map"},_indexOf:function(t){for(var e,i=0;e=this.entry[i];i++)if(e===t||e.equals(t))return i;return-1},_insertEntry:function(t){this.getItemsWithType(t.type)[t.id]=t;for(var e=this.length;e--;)if(t.postedTime>=this.entry[e].postedTime)return this.entry.splice(e+1,0,t),this.length++,t;return this.entry.unshift(t),this.length++,t},_removeIndex:function(t,e){return e=e||this.entry[t],e&&(this.entry.splice(t,1),delete this.types[e.type][e.id],this.length--),e}},n.prototype.get=n.prototype.find,n.LimitReachedError=function(t){this.name="LimitReached",this.eventDescriptor="limited",this.map=t,this.max=t.max,this.message="Maximium number of items reached"},n.LimitReachedError.prototype=new Error,n});
//# sourceMappingURL=map.js.map